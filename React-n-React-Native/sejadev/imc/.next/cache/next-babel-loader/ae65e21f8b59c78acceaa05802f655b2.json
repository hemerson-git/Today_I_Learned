{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mine\\\\Cursos\\\\Today_I_Learned\\\\React-n-React-Native\\\\sejadev\\\\imc\\\\components\\\\Calculator\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { Container, Grid, Typography, TextField, Button } from '@material-ui/core';\nimport styles from './Calculator.module.scss';\nexport default function Calculator() {\n  _s();\n\n  var _useState = useState(0),\n      height = _useState[0],\n      setHeight = _useState[1];\n\n  var _useState2 = useState(0),\n      weight = _useState2[0],\n      setWeight = _useState2[1];\n\n  var _useState3 = useState(0),\n      imc = _useState3[0],\n      setImc = _useState3[1];\n\n  function getImc() {\n    setImc((weight / Math.pow(height, 2)).toFixed(2));\n  }\n\n  function getImcStatus() {\n    console.log(imc);\n\n    switch (imc) {\n      case imc < 18.5:\n        return 'Abaixo do peso';\n\n      case imc < 24.9:\n        return 'Peso Normal';\n\n      case imc < 29.9:\n        return 'Sobrepeso';\n\n      case imc < 34.9:\n        return 'Obesidade Grau 1';\n\n      case imc < 39.9:\n        return 'Obesidade Grau 2';\n\n      default:\n        return 'Obesidade Grau 3';\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: styles.calculator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Calculator\"), __jsx(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    label: \"Altura em cm\",\n    variant: \"filled\",\n    fullWidth: true,\n    type: \"number\",\n    onChange: function onChange(e) {\n      setHeight(parseFloat(e.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    label: \"Massa em Kg\",\n    variant: \"filled\",\n    fullWidth: true,\n    type: \"number\",\n    onChange: function onChange(e) {\n      setWeight(parseFloat(e.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: getImc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Calcular\")), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"O seu IMC \\xE9: \", imc, \" kg/m\\xB2 - \", getImcStatus())))));\n}\n\n_s(Calculator, \"SZkJCRtAs6BbNR6mVUWiCcIx/d0=\");\n\n_c = Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["C:/Mine/Cursos/Today_I_Learned/React-n-React-Native/sejadev/imc/components/Calculator/index.js"],"names":["useState","Container","Grid","Typography","TextField","Button","styles","Calculator","height","setHeight","weight","setWeight","imc","setImc","getImc","toFixed","getImcStatus","console","log","calculator","e","parseFloat","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Container, Grid, Typography, TextField, Button } from '@material-ui/core';\r\nimport styles from './Calculator.module.scss';\r\n\r\nexport default function Calculator() {\r\n  const [height, setHeight] = useState(0);\r\n  const [weight, setWeight] = useState(0);\r\n  const [imc, setImc] = useState(0);\r\n  \r\n  function getImc() {\r\n    setImc((weight / height**2).toFixed(2));\r\n  }\r\n  \r\n  function getImcStatus() {\r\n    console.log(imc)\r\n    switch (imc) {\r\n      case (imc < 18.5):\r\n        return 'Abaixo do peso';\r\n      case (imc < 24.9):\r\n        return 'Peso Normal'\r\n      case (imc < 29.9):\r\n        return 'Sobrepeso'\r\n      case (imc < 34.9):\r\n        return 'Obesidade Grau 1'\r\n      case (imc < 39.9):\r\n        return 'Obesidade Grau 2'\r\n      default:\r\n        return 'Obesidade Grau 3'\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={styles.calculator}>\r\n      <Typography variant='h3'>Calculator</Typography>\r\n\r\n      <Container maxWidth=\"sm\">\r\n        <Grid container direction='column' spacing={2}>\r\n          <Grid item>\r\n            <TextField label=\"Altura em cm\" variant=\"filled\" fullWidth type=\"number\"\r\n              onChange={e => {\r\n                setHeight(parseFloat(e.target.value));\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <TextField label=\"Massa em Kg\" variant=\"filled\" fullWidth type=\"number\"\r\n              onChange={e => {\r\n                setWeight(parseFloat(e.target.value));\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" fullWidth onClick={getImc}>\r\n              Calcular\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography>O seu IMC é: {imc} kg/m² - {getImcStatus()}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}